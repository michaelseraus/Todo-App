{"version":3,"sources":["Components/Todo.js","Components/ToDoList.js","Components/Datum.js","App.js","index.js"],"names":["Todo","todoItem","todo","todos","setTodos","className","completed","onClick","map","item","id","icon","faCheck","color","filter","el","faTrash","ToDoList","isShowing","toDoDate","setInputValue","inputValue","onChange","event","target","value","type","alert","date","text","uuidv4","Datum","App","useState","Date","toLocaleDateString","setToDoDate","setIsShowing","formatDate","getMonth","getDate","getFullYear","tileClassName","i","data","length","tileContent","name","onClickDay","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15974541.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Todo = ({ todoItem, todo, todos, setTodos }) => {\n  // Handlers\n  const deleteHandler = () => {\n    setTodos(todos.filter((el) => el.id !== todo.id));\n  };\n\n  const completeHandler = () => {\n    setTodos(\n      todos.map((item) => {\n        if (item.id === todo.id) {\n          return {\n            ...item,\n            completed: !item.completed\n          };\n        }\n        return item;\n      })\n    );\n  };\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{todoItem}</li>\n      <div className=\"check-delete\">\n        <button onClick={completeHandler} className=\"complete-btn\">\n          <FontAwesomeIcon icon={faCheck} color=\"green\"></FontAwesomeIcon>\n        </button>\n        <button onClick={deleteHandler} className=\"trash-btn\">\n          <FontAwesomeIcon icon={faTrash} color=\"red\"></FontAwesomeIcon>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Todo from \"./Todo\";\n\nconst ToDoList = ({ isShowing, toDoDate, setTodos, todos, setInputValue, inputValue }) => {\n  // Handlers\n  const inputHandler = (event) => {\n    setInputValue(event.target.value);\n  };\n  const submitTodo = () => {\n    if (inputValue === \"\") return alert(\"Hey dumbass! Make sure to add a task!!\");\n    setTodos([...todos, { date: toDoDate, text: inputValue, completed: false, id: uuidv4() }]);\n    setInputValue(\"\");\n  };\n\n  return (\n    <div className={`todo-container ${isShowing ? \"\" : \"hidden\"}`}>\n      <h1>To Do List</h1>\n\n      <input onChange={inputHandler} value={inputValue} className=\"todo-input\" type=\"text\" />\n      <button className=\"add-btn\" onClick={submitTodo} type=\"submit\">\n        Add To Do\n      </button>\n\n      {todos\n        .filter((el) => el.date === toDoDate)\n        .map((todo) => (\n          <Todo\n            toDoDate={toDoDate}\n            todos={todos}\n            setTodos={setTodos}\n            todoItem={todo.text}\n            todo={todo}\n            key={todo.id}\n          />\n        ))}\n    </div>\n  );\n};\nexport default ToDoList;\n","import React from \"react\";\n\nconst Datum = ({ toDoDate }) => {\n  return (\n    <div className=\"date\">\n      <h1>{toDoDate}</h1>\n    </div>\n  );\n};\n\nexport default Datum;\n","import React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\n// Components\nimport ToDoList from \"./Components/ToDoList\";\n// data\nimport data from \"./data.json\";\nimport Datum from \"./Components/Datum\";\n\nfunction App() {\n  // state\n  const [toDoDate, setToDoDate] = useState(new Date().toLocaleDateString());\n  const [isShowing, setIsShowing] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  // Handlers\n  const storedDatesHandler = ({ date }) => {\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].date === formatDate(date)) return \"vacation\";\n    }\n    for (let i = 0; i < todos.length; i++) {\n      if (todos[i].date === formatDate(date)) return \"orange\";\n    }\n  };\n\n  const vacationTitleHandler = ({ date }) => {\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].date === formatDate(date)) return data[i].name;\n    }\n  };\n\n  const onChangeHandler = (date) => {\n    setToDoDate(formatDate(date));\n  };\n\n  const formatDate = (date) => {\n    return `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`;\n  };\n\n  const clickHandler = (date) => {\n    if (formatDate(date) === toDoDate) setIsShowing(!isShowing);\n  };\n\n  return (\n    <div className=\"App\">\n      <Calendar\n        setToDoDate={setToDoDate}\n        onChange={onChangeHandler}\n        tileClassName={storedDatesHandler}\n        tileContent={vacationTitleHandler}\n        onClickDay={clickHandler}\n      />\n      <Datum toDoDate={toDoDate} />\n      <ToDoList\n        inputValue={inputValue}\n        setInputValue={setInputValue}\n        todos={todos}\n        setTodos={setTodos}\n        toDoDate={toDoDate}\n        setToDoDate={setToDoDate}\n        isShowing={isShowing}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/app.scss\";\nimport App from \"./App\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./Styles/app.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}